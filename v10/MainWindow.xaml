<Window x:Class="MannsMoneyRegister.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MannsMoneyRegister"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        Title="Mann's Money Register" Height="900" Width="1825">
    <DockPanel>
        <Ribbon x:Name="RibbonTest" DockPanel.Dock="Top">
            <RibbonTab Header="Dashboard">
                <RibbonGroup Header="Account">
                    <StackPanel Orientation="Vertical">
                        <RibbonComboBox Label="Account:">
                            <RibbonGallery x:Name="ribbonComboBox_Dashboard_AccountSelection" MaxColumnCount="1" SelectionChanged="ribbonComboBox_Dashboard_AccountSelection_SelectionChanged">
                                <RibbonGalleryCategory x:Name="ribbonComboBox_Dashboard_AccountSelectionList" />
                            </RibbonGallery>
                        </RibbonComboBox>
                        <Separator />
                        <RibbonButton x:Name="ribbonButton_Dashboard_NewAccount" Label="New Account" SmallImageSource="Images/icon_new_account.png" VerticalAlignment="Bottom" Margin="0,0,0,0" Click="ribbonButton_Dashboard_NewAccount_Click" />
                        <RibbonButton x:Name="ribbonButton_Dashboard_RecalculateAccount" Label="Recalculate Account"  Margin="1,0,1,1" Click="ribbonButton_Dashboard_RecalculateAccount_Click" />

                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="New">
                    <StackPanel Orientation="Horizontal">
                        <RibbonGroup>
                            <RibbonButton x:Name="ribbonButton_Dashboard_NewTransaction" Label="New Transaction" LargeImageSource="Images/icon_add_transaction.png" Margin="-7,-7,-7,-13" Click="ribbonButton_Dashboard_NewTransaction_Click" />
                        </RibbonGroup>
                        <RibbonButton Label="Reserve Transaction" LargeImageSource="Images/icon_event_repeat.png" />
                        <RibbonButton x:Name="ribbonButton_Dashboard_ReserveTransaction" Height="20" Click="ribbonButton_Dashboard_ReserveTransaction_Click">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="New Transaction"></Label>
                            </StackPanel>
                        </RibbonButton>

                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="Date Range">
                    <StackPanel Orientation="Vertical">
                        <RibbonComboBox Label="Days:">
                            <RibbonGallery x:Name="ribbonComboBox_Dashboard_SearchDayCount" SelectedValuePath="Content" MaxColumnCount="1" SelectionChanged="ribbonComboBox_Dashboard_DayCount_SelectionChanged">
                                <RibbonGalleryCategory x:Name="ribbonComboBox_Dashboard_SearchDayCountList">
                                    <RibbonGalleryItem Content="30 Days" />
                                    <RibbonGalleryItem Content="45 Days" />
                                    <RibbonGalleryItem Content="60 Days" />
                                    <RibbonGalleryItem Content="90 Days" />
                                    <RibbonGalleryItem Content="Custom" />
                                </RibbonGalleryCategory>
                            </RibbonGallery>
                        </RibbonComboBox>
                        <StackPanel Orientation="Horizontal">
                            <RibbonTextBox x:Name="ribbonTextBox_Dashboard_CustomRangeDisplayStart" Visibility="Hidden" />
                            <RibbonTextBox x:Name="ribbonTextBox_Dashboard_CustomRangeDisplayEnd" Visibility="Hidden" />
                        </StackPanel>
                        <RibbonButton x:Name="ribbonButton_Dashboard_CustomRange" Label="Change Range" VerticalAlignment="Bottom" Margin="0,0,0,0" Click="ribbonButton_Dashboard_CustomRange_Click" />
                        <Popup Name="ribbonPopup_Dashboard_CustomRangeStart" IsOpen="false">
                            <Border BorderThickness="1">
                                <StackPanel Orientation="Horizontal">
                                    <DatePicker />
                                    <DatePicker />
                                </StackPanel>
                            </Border>
                        </Popup>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
            <RibbonTab Header="Accounts" />
        </Ribbon>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <Label x:Name="labelBalance" Content="Balance: $43.55" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <Label x:Name="labelOutstanding" Content="Oustanding: -$43.55 (4 items)" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem HorizontalAlignment="Right">
                <Label x:Name="labelStatus" Content="Status: Idle" />
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1200" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <DataGrid x:Name="dataGridTransactions" AutoGenerateColumns="False" CanUserAddRows="false" Grid.Row="0" Grid.Column="0" Grid.RowSpan="24"
                      EnableRowVirtualization="True" Background="Gray" AlternationCount="2" SelectionMode="Single" SelectionChanged="dataGridTransactions_SelectionChanged">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Id}" Visibility="Hidden" IsReadOnly="True" />
                    <DataGridTextColumn Binding="{Binding Name}" Header="Name" Width="280">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
                                <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Amount, StringFormat=C}" Header="Amount" Width="100" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTemplateColumn x:Name="Pending" Header="Pending" Width="110">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button>
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Button Name="datagridButtonPendingTransaction" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden" Margin="2,2,2,2" Width="115" Height="30" Content="Pending" Click="datagridButtonPendingTransaction_Click" />
                                                <TextBlock Name="PendingTextBlock" Text="{Binding TransactionPendingLocalTime, StringFormat={}{0:MM/dd/yyyy}}" Visibility="Visible" Margin="2,2,2,2" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=TransactionPendingLocalTime}" Value="{x:Null}" />
                                                        <Condition Binding="{Binding Path=TransactionClearedLocalTime}" Value="{x:Null}"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter TargetName="datagridButtonPendingTransaction" Property="Visibility" Value="Visible" />
                                                    <Setter TargetName="PendingTextBlock" Property="Visibility" Value="Hidden" />
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="ClearedColumn" Header="Clear" Width="110">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button>
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Button Name="datagridButtonClearTransaction" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden" Margin="2,2,2,2" Width="115" Height="30" Content="Clear" Click="datagridButtonClearTransaction_Click" />
                                                <TextBlock Name="ClearedTextBlock" Text="{Binding TransactionClearedLocalTime, StringFormat={}{0:MM/dd/yyyy}}" Visibility="Visible" Margin="2,2,2,2" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding TransactionClearedLocalTime}" Value="{x:Null}">
                                                    <Setter TargetName="datagridButtonClearTransaction" Property="Visibility" Value="Visible" />
                                                    <Setter TargetName="ClearedTextBlock" Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding TagCompositeString}" Header="Tags" Width="145" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding FileCount}" Header="Files" Width="35" IsReadOnly="true" />
                    <DataGridTextColumn Binding="{Binding Notes}" Header="Notes" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="NoWrap" />
                                <Setter Property="TextBlock.TextTrimming" Value="WordEllipsis" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Balance, StringFormat=C}" Header="Balance" Width="100" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                    </DataGridTextColumn>

                </DataGrid.Columns>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="FontSize" Value="18" />
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="DarkGray"></Setter>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="LightGray"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                           Value="True">
                                <Setter Property="Background"
                               Value="LightBlue" />
                                <Setter Property="Foreground"
                        Value="Black" />

                            </Trigger>
                            <Trigger Property="IsSelected"
                           Value="True">
                                <Setter Property="Background"
                               Value="BurlyWood" />
                                <Setter Property="Foreground"
                        Value="Black" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=TransactionClearedLocalTime}" Value="{x:Null}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="LightYellow" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=TransactionPendingLocalTime}" Value="{x:Null}" />
                                    <Condition Binding="{Binding Path=TransactionClearedLocalTime}" Value="{x:Null}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="LightCoral" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
            <Border Grid.Row="0" Grid.Column="1" Grid.RowSpan="24" Height="2008" Width="2" Background="WhiteSmoke" BorderThickness="1" BorderBrush="#ABADB3" Margin="2 2 2 2 "/>

            <Border Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="10" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="11" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="12" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="13" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="14" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="15" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="16" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="17" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="18" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="19" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="20" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="21" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="22" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="23" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />
            <Border Grid.Row="24" Grid.Column="2" Grid.ColumnSpan="4" Background="#FFDFE9F5" />

            <Button x:Name="buttonSaveTransaction" Grid.Row="0" Grid.Column="5" Width="70" Margin="5,5,5,5" HorizontalAlignment="Right" Content="Save" Click="buttonSaveTransaction_Click" />

            <Label Grid.Row="1" Grid.Column="2">Account:</Label>
            <ComboBox x:Name="comboBoxAccount" Grid.Row="1" Grid.Column="3" Margin="5,5,25,5" TabIndex="12" SelectedValue="{Binding AccountId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="2" Grid.Column="2">Transaction Type:</Label>
            <ComboBox x:Name="comboBoxTransactionType" Grid.Row="2" Grid.Column="3" Margin="5,5,25,5" TabIndex="13" SelectedValue="{Binding TransactionType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="3" Grid.Column="2">Name:</Label>
            <TextBox x:Name="textBoxTransactionName" Grid.Row="3" Grid.Column="3" Margin="5,5,5,5" TabIndex="1" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="4" Grid.Column="2">Amount:</Label>
            <TextBox x:Name="transactionAmountTextBox" Grid.Row="4" Grid.Column="3" Margin="5,5,5,5" TabIndex="2" Text="{Binding Amount, Mode=TwoWay, UpdateSourceTrigger=LostFocus, StringFormat=C}" />

            <Label Grid.Row="5" Grid.Column="2">Tags:</Label>
            <ListView x:Name="listViewUnselectedTransactionTags" Grid.Row="5" Grid.Column="3" Grid.RowSpan="3" Margin="5,5,5,5" TabIndex="3" SelectedValuePath="Id" DisplayMemberPath="Name" SelectionMode="Single" ItemsSource="{Binding UnselectedTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MouseDoubleClick="listViewUnselectedTransactionTags_MouseDoubleClick" />
            <Button x:Name="buttonAddTagToTransaction" Grid.Row="5" Grid.Column="4" Content="&gt;&gt;" Margin="5,5,5,5" Click="buttonAddTagToTransaction_Click" />
            <Button x:Name="buttonRemoveTagFromTransaction" Grid.Row="7" Grid.Column="4" Content="&lt;&lt;" Margin="5,5,5,5" Click="buttonRemoveTagFromTransaction_Click" />
            <ListView x:Name="listViewSelectedTransactionTags" Grid.Row="5" Grid.Column="5" Grid.RowSpan="3" Margin="5,5,5,5" TabIndex="3" SelectedValuePath="Id" DisplayMemberPath="Name" SelectionMode="Single" ItemsSource="{Binding SelectedTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MouseDoubleClick="listViewSelectedTransactionTags_MouseDoubleClick" />

            <Label Grid.Row="8" Grid.Column="2">Pending:</Label>
            <DatePicker x:Name="datePickerPendingDate" Grid.Row="8" Grid.Column="3" TabIndex="4" Margin="5,0,5,0" SelectedDate="{Binding TransactionPending, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='' ,StringFormat={}{0:MM/dd/yyyy}}" DisplayDate="{Binding TransactionPending, Mode=TwoWay, TargetNullValue='' ,StringFormat={}{0:MM/dd/yyyy}}" CalendarOpened="datePickerPendingDate_CalendarOpened" />

            <Label Grid.Row="8" Grid.Column="4" HorizontalAlignment="Right">Cleared:</Label>
            <DatePicker x:Name="datePickerClearedDate" Grid.Row="8" Grid.Column="5" IsTodayHighlighted="True" TabIndex="5" Margin="5,0,5,0" SelectedDate="{Binding TransactionCleared, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='',StringFormat={}{0:MM/dd/yyyy}}" DisplayDate="{Binding TransactionCleared, Mode=TwoWay, TargetNullValue='' ,StringFormat={}{0:MM/dd/yyyy}}" CalendarOpened="datePickerClearedDate_CalendarOpened"  />

            <Label Grid.Row="9" Grid.Column="2">Notes:</Label>
            <TextBox x:Name="textBoxNotes" Grid.Row="9" Grid.Column="3" Margin="5,4,5,6" TabIndex="6" Text="{Binding Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="10" Grid.Column="2">Confirmation #:</Label>
            <TextBox x:Name="textBoxConfirmationNumber" Grid.Row="10" Grid.Column="3" Margin="5,5,5,5" TabIndex="7" Text="{Binding ConfirmationNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <Label Grid.Row="11" Grid.Column="2">Bank Text:</Label>
            <TextBox x:Name="textBoxBankText" Grid.Row="11" Grid.Column="3" Margin="5,5,5,5" TabIndex="8" Text="{Binding BankTransactionText}" />

            <Label Grid.Row="12" Grid.Column="2">Expected due:</Label>
            <DatePicker x:Name="datePickerDueDate" Grid.Row="12" Grid.Column="3" IsTodayHighlighted="True" Margin="5,0,5,0" TabIndex="5" SelectedDate="{Binding DueDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue='' ,StringFormat={}{0:MM/dd/yyyy}}" DisplayDate="{Binding DueDate, Mode=TwoWay, TargetNullValue='' ,StringFormat={}{0:MM/dd/yyyy}}"  />

            <Label Grid.Row="13" Grid.Column="2">Files:</Label>
            <ListView x:Name="listViewTransactionFiles" Grid.Row="13" Grid.Column="3" Grid.RowSpan="3" Grid.ColumnSpan="3" Margin="5,5,5,5" TabIndex="9" ItemsSource="{Binding Files, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="400" HorizontalAlignment="Left" MouseDoubleClick="listViewTransactionFiles_MouseDoubleClick">
                <ListView.View>
                    <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="File List">
                        <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="75"/>
                        <GridViewColumn DisplayMemberBinding="{Binding Filename}" Header="Filename" Width="75"/>
                        <GridViewColumn DisplayMemberBinding="{Binding Size}" Header="Size" Width="50"/>
                        <GridViewColumn DisplayMemberBinding="{Binding CreatedOnLocalTime, StringFormat=MM/dd/yyyy}" Header="Date" Width="75"/>
                        <GridViewColumn DisplayMemberBinding="{Binding Notes}" Header="Notes" Width="90"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <Button x:Name="buttonAddFile" Grid.Row="13" Grid.Column="5" Margin="5,5,5,5" HorizontalAlignment="Right" Width="75" Click="buttonAddFile_Click">Add File</Button>
            <Button x:Name="buttonDeleteFile" Grid.Row="15" Grid.Column="5" Margin="5,5,5,5" HorizontalAlignment="Right" Width="75" Click="buttonDeleteFile_Click">Delete File</Button>
            <Button x:Name="buttonDeleteTransaction" Grid.Row="18" Grid.Column="5" TabIndex="10" Margin="5,5,15,5" HorizontalAlignment="Right" Width="125" Click="buttonDeleteTransaction_Click">Delete Transaction</Button>
        </Grid>
    </DockPanel>
</Window>
