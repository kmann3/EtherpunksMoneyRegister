// <auto-generated />
using System;
using MannsMoneyRegister.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MannsMoneyRegister.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240301101124_000-init")]
    partial class _000init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2");

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastBalancedUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OutstandingBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("OutstandingItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("StartingBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.AccountTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfirmationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecurringTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TransactionClearedUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TransactionPendingUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecurringTransactionId");

                    b.ToTable("AccountTransactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.AccountTransactionFile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AccountTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountTransactionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AccountTransactionFiles");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Link_Tag_RecurringTransaction", b =>
                {
                    b.Property<Guid>("RecurringTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("RecurringTransactionId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("Link_Tag_RecurringTransactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Link_Tag_Transaction", b =>
                {
                    b.Property<Guid>("AccountTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountTransactionId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("Link_Categories_Transactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionRegEx")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FrequencyDateValue")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FrequencyDayOfWeekValue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FrequencyValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("NextDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecurringFrequencyType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecurringTransactionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RecurringTransactionGroupId");

                    b.ToTable("RecurringTransactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.RecurringTransactionGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RecurringTransactionGroups");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.AccountTransaction", b =>
                {
                    b.HasOne("MannsMoneyRegister.Data.Entities.Account", "Account")
                        .WithMany("AccountTransactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MannsMoneyRegister.Data.Entities.RecurringTransaction", "RecurringTransaction")
                        .WithMany("PreviousAccountTransactions")
                        .HasForeignKey("RecurringTransactionId");

                    b.Navigation("Account");

                    b.Navigation("RecurringTransaction");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.AccountTransactionFile", b =>
                {
                    b.HasOne("MannsMoneyRegister.Data.Entities.AccountTransaction", "AccountTransaction")
                        .WithMany("Files")
                        .HasForeignKey("AccountTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountTransaction");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Link_Tag_RecurringTransaction", b =>
                {
                    b.HasOne("MannsMoneyRegister.Data.Entities.RecurringTransaction", null)
                        .WithMany("Link_Tag_RecurringTransactions")
                        .HasForeignKey("RecurringTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MannsMoneyRegister.Data.Entities.Tag", null)
                        .WithMany("Link_Tag_RecurringTransactions")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Link_Tag_Transaction", b =>
                {
                    b.HasOne("MannsMoneyRegister.Data.Entities.AccountTransaction", null)
                        .WithMany("Link_Tag_Transactions")
                        .HasForeignKey("AccountTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MannsMoneyRegister.Data.Entities.Tag", null)
                        .WithMany("Link_Tag_Transactions")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.HasOne("MannsMoneyRegister.Data.Entities.RecurringTransactionGroup", "Group")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("RecurringTransactionGroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Account", b =>
                {
                    b.Navigation("AccountTransactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.AccountTransaction", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Link_Tag_Transactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.Navigation("Link_Tag_RecurringTransactions");

                    b.Navigation("PreviousAccountTransactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.RecurringTransactionGroup", b =>
                {
                    b.Navigation("RecurringTransactions");
                });

            modelBuilder.Entity("MannsMoneyRegister.Data.Entities.Tag", b =>
                {
                    b.Navigation("Link_Tag_RecurringTransactions");

                    b.Navigation("Link_Tag_Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
