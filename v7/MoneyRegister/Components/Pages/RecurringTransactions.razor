@page "/editRecurringTransaction"
@using Data.Entities
@using Pages.Util

@inject Data.Services.RecurringTransactionService MR_RecTranService
@inject IDialogService DialogService

<PageTitle>Mann's Money Management - Recurring Transactions</PageTitle>

@if (recurringTransactions == null)
{
    <p><em>Loading...</em></p>
}
else if (recurringTransactions.Count == 0)
{
    // Probably a new setup, begin guided setup
    <p><em>No items found</em></p>
}
else
{

    <MudDataGrid Items="@recurringTransactions" T="Data.Entities.RecurringTransaction"
                 Filterable="false" SortMode="@SortMode.None" Groupable="false"
                 RowClick="@OnRowClick">
        <Columns>
            <PropertyColumn Property="x => x!.Name" />
            <PropertyColumn Property="x => x!.TransactionType" />
            <TemplateColumn Title="Bill Group">
                <CellTemplate>
                    @if(context.Item.Group != null)
                    {
                        @context.Item.Group.Name
                    }
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="x => x.FrequencyString" />
            <PropertyColumn Property="x => x.NextDueDate" Title="Next Due" >
                <CellTemplate>
                    @context.Item.NextDueDate?.ToString("d")
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="x => x.Notes" />
            <PropertyColumn Property="x => x!.Amount" Format="C" />
            <TemplateColumn Title="Categories">
                <CellTemplate>
                    @if (context.Item.Link_Category_RecurringTransactions.Count() > 0)
                    {
                        @foreach (var cat in context.Item.Link_Category_RecurringTransactions.OrderBy(x => x.Category.Name))
                        {
                            @cat.Category.Name

                            if (cat.CategoryId != context.Item.Link_Category_RecurringTransactions.OrderBy(x => x.Category.Name).Last().CategoryId)
                            {
                                <text>, &nbsp;</text>
                            }
                        }
                    }
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
}

@code {
    private List<Data.Entities.RecurringTransaction> recurringTransactions;

    protected override async Task OnInitializedAsync()
    {
        recurringTransactions = await MR_RecTranService.GetAllRecurringTransactionsAsync();
    }

    private async void OnRowClick(DataGridRowClickEventArgs<Data.Entities.RecurringTransaction> item)
    {
        // Use Dialog
        // https://www.mudblazor.com/components/dialog#passing-data

        // categories?
        var result = await DialogUtil.ShowAccountDialog(DialogService, false, item.Item);
        if(!result.Canceled)
        {
            RecurringTransaction newItem = result.Data as RecurringTransaction;
            if(newItem.DeletedOnUTC.HasValue)
            {
                // remove it from the list
                recurringTransactions.Remove(item.Item);

            } else
            {
                // Update it
            }
        }
    }
}
