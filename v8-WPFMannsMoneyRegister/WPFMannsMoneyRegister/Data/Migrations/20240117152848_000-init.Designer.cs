// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPFMannsMoneyRegister.Data;

#nullable disable

namespace WPFMannsMoneyRegister.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240117152848_000-init")]
    partial class _000init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastBalancedUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OutstandingBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("OutstandingItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("StartingBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            AccountNumber = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(627),
                            CurrentBalance = 2371.79m,
                            InterestRate = 0m,
                            LastBalancedUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(633),
                            LoginUrl = "",
                            Name = "Neches FCU",
                            Notes = "",
                            OutstandingBalance = -30.91m,
                            OutstandingItemCount = 2,
                            StartingBalance = 2111.84m
                        },
                        new
                        {
                            Id = new Guid("cd94b889-1782-40ac-8928-fdd8e91bf795"),
                            AccountNumber = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(637),
                            CurrentBalance = -973.31m,
                            InterestRate = 0m,
                            LastBalancedUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(638),
                            LoginUrl = "",
                            Name = "Capital One",
                            Notes = "",
                            OutstandingBalance = -110.91m,
                            OutstandingItemCount = 3,
                            StartingBalance = -862.4m
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(641),
                            Name = "bills"
                        },
                        new
                        {
                            Id = new Guid("035eef39-3acd-47aa-8d5e-5fee02890f96"),
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(643),
                            Name = "fast-food"
                        },
                        new
                        {
                            Id = new Guid("8961dc00-f092-4b2a-8d7f-1d535068142c"),
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(648),
                            Name = "gas"
                        },
                        new
                        {
                            Id = new Guid("e920aca7-7ce1-433f-a9ad-d2a9d1edd49d"),
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(649),
                            Name = "groceries"
                        },
                        new
                        {
                            Id = new Guid("8893122e-d6e9-4cf5-b588-551b37fffcfd"),
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(650),
                            Name = "medications"
                        },
                        new
                        {
                            Id = new Guid("b8cd4fc6-beee-4d3c-8589-9e465e5defd3"),
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(651),
                            Name = "streaming"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_RecurringTransaction", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecurringTransactionId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId", "RecurringTransactionId");

                    b.HasIndex("RecurringTransactionId");

                    b.ToTable("Link_Category_RecurringTransactions");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("b693609d-7332-49f7-a052-4f84fd30d85e")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("ea39baef-58e5-468a-a584-4bf5c267a3a0")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("91d9a480-1629-4843-ba73-0da441978204")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("5dc5a0c9-4453-486b-8e4a-8e11d58d3a30")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("85145c0e-722f-4c2b-9eea-b2c25134a890")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("eb34fecb-47fb-4fa8-aae3-4729b22e58fb")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("f00fc112-649c-49a8-94c9-3b71aa2d2ec6")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("833c4b83-3ee8-4067-97f4-523853a1fb09")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("474d7f37-fa9e-4edd-9267-55a92dd88da3")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("74e7bae2-eb83-4c38-bbe1-18e71c2b1190")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("ae85095f-8557-438a-9dfd-37d588b31963")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("149a2aa8-b100-4d34-9af7-27436006f5c9")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            RecurringTransactionId = new Guid("65f4a40e-7ede-4341-bfd4-09050d0cbb3b")
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_Transaction", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId", "TransactionId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Link_Categories_Transactions");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("05f8aae4-9700-4e2a-9ecb-d54133987233")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("90bac02a-2580-4a88-985d-9d96a39e3acc")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("a24f04d7-89b2-48e4-ace5-70025e2fa48b")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("a8e1929b-9613-4c09-9ae4-5cffb2e1b9fe")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("5fe22bc5-b431-457f-9e50-a4ac6cd4cd1e")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("2cb1faf3-afb6-4179-90db-410b511f59ac")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("2cf9f915-ddd2-4758-9f1c-461208dfd522")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("4e3793da-b404-41e5-ac20-51ad1fbbeb65")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("f4ec1714-a134-44cd-955e-1a09885fd329")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("9c261aa9-528e-43fd-94ac-6a2b9610b23a")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("93268c9b-323d-4257-823b-194c3de2fe78")
                        },
                        new
                        {
                            CategoryId = new Guid("0703dbc5-261c-4e3c-927b-dee035a3451e"),
                            TransactionId = new Guid("e57e52e3-97e1-4e58-9468-a726669604f8")
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionRegEx")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FrequencyDateValue")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FrequencyDayOfWeekValue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FrequencyValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("NextDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecurringFrequencyType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TransactionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TransactionGroupId");

                    b.ToTable("RecurringTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b693609d-7332-49f7-a052-4f84fd30d85e"),
                            Amount = -10.81m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "CA 408 536 6000 ADOBE INC.",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(789),
                            FrequencyDateValue = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adobe Photoshop",
                            NextDueDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("ea39baef-58e5-468a-a584-4bf5c267a3a0"),
                            Amount = -16.79m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "ALLSTATE INS CO (INS PREM)",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(839),
                            FrequencyDateValue = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Allstate Apartment Insurance",
                            NextDueDate = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("91d9a480-1629-4843-ba73-0da441978204"),
                            Amount = -2.99m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(865),
                            FrequencyDateValue = new DateTime(2023, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple iCloud",
                            NextDueDate = new DateTime(2024, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("5dc5a0c9-4453-486b-8e4a-8e11d58d3a30"),
                            Amount = -27.92m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(892),
                            FrequencyDateValue = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple Services",
                            NextDueDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("85145c0e-722f-4c2b-9eea-b2c25134a890"),
                            Amount = -80.72m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "TX 800 331 0500 ATT*BILL",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(917),
                            FrequencyDateValue = new DateTime(2023, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AT&T",
                            NextDueDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("eb34fecb-47fb-4fa8-aae3-4729b22e58fb"),
                            Amount = -719.52m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "Transfer",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(943),
                            FrequencyDateValue = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Explorer",
                            NextDueDate = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("f00fc112-649c-49a8-94c9-3b71aa2d2ec6"),
                            Amount = -36.81m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "TN 888 242 2060 FITNESS YOUR",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(969),
                            FrequencyDateValue = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyValue = 9,
                            Name = "Fitness Your Way",
                            NextDueDate = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("833c4b83-3ee8-4067-97f4-523853a1fb09"),
                            Amount = -12.79m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "CA CC GOOGLE.COM GOOGLE*GSUITE",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1000),
                            FrequencyDateValue = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Etherpunk",
                            NextDueDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("474d7f37-fa9e-4edd-9267-55a92dd88da3"),
                            Amount = -472.12m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "WEBUSDA NFC DPRS (ONLINE PMT)",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1024),
                            FrequencyDateValue = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Health Insurance",
                            NextDueDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("74e7bae2-eb83-4c38-bbe1-18e71c2b1190"),
                            Amount = -83.36m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "Transfer",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1049),
                            FrequencyDateValue = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Loan",
                            NextDueDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("ae85095f-8557-438a-9dfd-37d588b31963"),
                            Amount = -104.00m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "WEBVENMO (PAYMENT)",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1075),
                            FrequencyDateValue = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Verizon",
                            NextDueDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Venmo money to Tim",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("149a2aa8-b100-4d34-9af7-27436006f5c9"),
                            Amount = -150.00m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "WEBWELLS FARGO CARD (CCPYMT)",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1106),
                            FrequencyDateValue = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WF: Windows",
                            NextDueDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("65f4a40e-7ede-4341-bfd4-09050d0cbb3b"),
                            Amount = -67.5m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1128),
                            FrequencyDateValue = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WF: A/C",
                            NextDueDate = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("06fe0a29-da51-477c-8aa8-a9fc56ba3b1c"),
                            Amount = -83.4m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1171),
                            FrequencyDateValue = new DateTime(2024, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Smarter ASP.Net: Etherpunk Web Hosting",
                            NextDueDate = new DateTime(2024, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("de1b419a-5877-450c-8d99-8650db1a75e0"),
                            Amount = -15.88m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1184),
                            FrequencyDateValue = new DateTime(2024, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Namecheap: Etherpunk DNS",
                            NextDueDate = new DateTime(2024, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("c9192a94-3d64-4c42-9430-96a49f2243af"),
                            Amount = -150.47m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1197),
                            FrequencyDateValue = new DateTime(2024, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amazon",
                            NextDueDate = new DateTime(2024, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("88b75db9-4bbb-4410-9f33-5650620a4682"),
                            Amount = -70m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1218),
                            Name = "Monique: Dexter Grooming",
                            Notes = "",
                            RecurringFrequencyType = "Unknown",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("f7ca1af8-8cae-404c-a899-2f4196dc3468"),
                            Amount = -108.24m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1233),
                            FrequencyDateValue = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Office 365",
                            NextDueDate = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("f33d31db-9b6d-41c2-92fb-d208d617474d"),
                            Amount = -98.51m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1246),
                            Name = "Bill Clark",
                            Notes = "",
                            RecurringFrequencyType = "Irregular",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("54a1b18c-2cec-4ca0-8bc1-2b8f592cf964"),
                            Amount = 175m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1268),
                            FrequencyDateValue = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mom-CellPhone",
                            NextDueDate = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("9fc38f52-2652-410e-b835-f1d5007e907b"),
                            Amount = 1998m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "SSA TREAS 310 (XXSOC SEC)",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1272),
                            FrequencyDayOfWeekValue = 3,
                            FrequencyValue = 4,
                            Name = "SSDI",
                            NextDueDate = new DateTime(2024, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "XWeekOnYDayOfWeek",
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("3d2bc771-d07d-4d5b-89f1-6796bcf00539"),
                            Amount = 378.27m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "OPM1 TREAS 310 (XXCIV SERV)",
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(1287),
                            FrequencyDateValue = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OPM",
                            NextDueDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionType = "Credit"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<Guid>("DefaultAccountId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<int>("SearchDayCount")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultAccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            SearchDayCount = 45
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfirmationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecurringTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TransactionClearedUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TransactionPendingUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecurringTransactionId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05f8aae4-9700-4e2a-9ecb-d54133987233"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -83.36m,
                            Balance = 2028.48m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Loan",
                            Notes = "",
                            RecurringTransactionId = new Guid("74e7bae2-eb83-4c38-bbe1-18e71c2b1190"),
                            TransactionClearedUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("90bac02a-2580-4a88-985d-9d96a39e3acc"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -104.00m,
                            Balance = 1924.48m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 1, 0, DateTimeKind.Unspecified),
                            Name = "Verizon",
                            Notes = "",
                            RecurringTransactionId = new Guid("ae85095f-8557-438a-9dfd-37d588b31963"),
                            TransactionClearedUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("a8cb3546-f64a-4f07-9e75-b2e458699f41"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -838.07m,
                            Balance = 1086.41m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 2, 0, DateTimeKind.Unspecified),
                            Name = "Capital One",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("a24f04d7-89b2-48e4-ace5-70025e2fa48b"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -80.72m,
                            Balance = 1005.69m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 3, 0, DateTimeKind.Unspecified),
                            Name = "AT&T",
                            Notes = "",
                            RecurringTransactionId = new Guid("85145c0e-722f-4c2b-9eea-b2c25134a890"),
                            TransactionClearedUTC = new DateTime(2023, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("a8e1929b-9613-4c09-9ae4-5cffb2e1b9fe"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -150.00m,
                            Balance = 855.69m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 4, 0, DateTimeKind.Unspecified),
                            Name = "WF: Windows",
                            Notes = "",
                            RecurringTransactionId = new Guid("149a2aa8-b100-4d34-9af7-27436006f5c9"),
                            TransactionClearedUTC = new DateTime(2023, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("5fe22bc5-b431-457f-9e50-a4ac6cd4cd1e"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -472.12m,
                            Balance = 383.57m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 5, 0, DateTimeKind.Unspecified),
                            Name = "Health Insurance",
                            Notes = "",
                            RecurringTransactionId = new Guid("474d7f37-fa9e-4edd-9267-55a92dd88da3"),
                            TransactionClearedUTC = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("2cb1faf3-afb6-4179-90db-410b511f59ac"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = 378.27m,
                            Balance = 761.84m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 6, 0, DateTimeKind.Unspecified),
                            Name = "OPM",
                            Notes = "",
                            RecurringTransactionId = new Guid("3d2bc771-d07d-4d5b-89f1-6796bcf00539"),
                            TransactionClearedUTC = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("9a6c7148-fa34-43c9-a380-90b42da78903"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -100m,
                            Balance = 661.84m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 7, 0, DateTimeKind.Unspecified),
                            Name = "Alice",
                            Notes = "Help Alice Rent / Venmo",
                            TransactionClearedUTC = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("2cf9f915-ddd2-4758-9f1c-461208dfd522"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -12.79m,
                            Balance = 649.05m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 8, 0, DateTimeKind.Unspecified),
                            Name = "Etherpunk",
                            Notes = "",
                            RecurringTransactionId = new Guid("833c4b83-3ee8-4067-97f4-523853a1fb09"),
                            TransactionClearedUTC = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("0cdd5537-ca58-42b9-833a-facd89a6f495"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = 0.06m,
                            Balance = 649.11m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 9, 0, DateTimeKind.Unspecified),
                            Name = "Dividends",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("7b68e713-970d-4738-9cdf-f56efef0f4cc"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -500m,
                            Balance = 149.11m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 10, 0, DateTimeKind.Unspecified),
                            Name = "Capital One",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("c56aa87f-8bed-43cd-8746-c6f684ae495c"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -35m,
                            Balance = 114.11m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 11, 0, DateTimeKind.Unspecified),
                            Name = "Capital One",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("4e3793da-b404-41e5-ac20-51ad1fbbeb65"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -36.81m,
                            Balance = 77.30m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 12, 0, DateTimeKind.Unspecified),
                            Name = "Fitness Your Way",
                            Notes = "",
                            RecurringTransactionId = new Guid("f00fc112-649c-49a8-94c9-3b71aa2d2ec6"),
                            TransactionClearedUTC = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("f4ec1714-a134-44cd-955e-1a09885fd329"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -10.81m,
                            Balance = 66.49m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 13, 0, DateTimeKind.Unspecified),
                            Name = "Adobe Photoshop",
                            Notes = "",
                            RecurringTransactionId = new Guid("b693609d-7332-49f7-a052-4f84fd30d85e"),
                            TransactionClearedUTC = new DateTime(2023, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("0275eb37-b864-4700-a136-b2d9aef959d9"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = 250m,
                            Balance = 316.49m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 14, 0, DateTimeKind.Unspecified),
                            Name = "Mom / Xmas+Birthday",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("8adf1ea8-81b1-4c47-8869-670164be2e51"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -70m,
                            Balance = 246.49m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 15, 0, DateTimeKind.Unspecified),
                            Name = "Monique / Dexter Grooming",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("6c1b8500-edd7-450f-bf41-fc378e856e2c"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = 175m,
                            Balance = 421.49m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 16, 0, DateTimeKind.Unspecified),
                            Name = "Mom / Cell Phone",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("9c261aa9-528e-43fd-94ac-6a2b9610b23a"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -16.79m,
                            Balance = 404.70m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 19, 0, 0, 17, 0, DateTimeKind.Unspecified),
                            Name = "Allstate Apartment Insurance",
                            Notes = "",
                            RecurringTransactionId = new Guid("ea39baef-58e5-468a-a584-4bf5c267a3a0"),
                            TransactionClearedUTC = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("93268c9b-323d-4257-823b-194c3de2fe78"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -2.99m,
                            Balance = 401.71m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 18, 0, DateTimeKind.Unspecified),
                            Name = "Apple iCloud",
                            Notes = "",
                            RecurringTransactionId = new Guid("91d9a480-1629-4843-ba73-0da441978204"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("e57e52e3-97e1-4e58-9468-a726669604f8"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = -27.92m,
                            Balance = 373.79m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 19, 0, DateTimeKind.Unspecified),
                            Name = "Apple Services",
                            Notes = "",
                            RecurringTransactionId = new Guid("5dc5a0c9-4453-486b-8e4a-8e11d58d3a30"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("a8cd36d8-de25-4fda-b5b0-52fbffe379f5"),
                            AccountId = new Guid("daad76d4-ba1d-4c48-ab71-faedb79307e3"),
                            Amount = 1998m,
                            Balance = 2371.79m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 22, 0, 0, 20, 0, DateTimeKind.Unspecified),
                            Name = "SSDI",
                            Notes = "",
                            RecurringTransactionId = new Guid("9fc38f52-2652-410e-b835-f1d5007e907b"),
                            TransactionClearedUTC = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("7322d3db-98d3-4b95-8221-74a0f127795f"),
                            AccountId = new Guid("cd94b889-1782-40ac-8928-fdd8e91bf795"),
                            Amount = -30.29m,
                            Balance = -892.69m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Valve",
                            Notes = "",
                            TransactionPendingUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("f861c8d3-a3de-4f0f-9847-72dc1a4eb11a"),
                            AccountId = new Guid("cd94b889-1782-40ac-8928-fdd8e91bf795"),
                            Amount = -9.73m,
                            Balance = -902.42m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 23, 0, 0, 1, 0, DateTimeKind.Unspecified),
                            Name = "Whataburger",
                            Notes = "",
                            TransactionPendingUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("ef3cdb61-37ba-4ec9-b5d1-f1545f0ada21"),
                            AccountId = new Guid("cd94b889-1782-40ac-8928-fdd8e91bf795"),
                            Amount = -70.89m,
                            Balance = -973.31m,
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 23, 0, 0, 2, 0, DateTimeKind.Unspecified),
                            Name = "SMARTERASP.NET",
                            Notes = "",
                            TransactionPendingUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionFile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TransactionId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TransactionGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c214010d-1742-4bf7-b96b-21313edda5e5"),
                            CreatedOnUTC = new DateTime(2024, 1, 17, 15, 28, 47, 905, DateTimeKind.Utc).AddTicks(766),
                            Name = "All Regular Bills"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_RecurringTransaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Category", null)
                        .WithMany("Link_Category_RecurringTransactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", null)
                        .WithMany("Link_Category_RecurringTransactions")
                        .HasForeignKey("RecurringTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_Transaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Category", null)
                        .WithMany("Link_Category_Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Transaction", null)
                        .WithMany("Link_Category_Transactions")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.TransactionGroup", "Group")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("TransactionGroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Transaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", "RecurringTransaction")
                        .WithMany("PreviousTransactions")
                        .HasForeignKey("RecurringTransactionId");

                    b.Navigation("Account");

                    b.Navigation("RecurringTransaction");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionFile", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Transaction", "Transaction")
                        .WithMany("Files")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Category", b =>
                {
                    b.Navigation("Link_Category_RecurringTransactions");

                    b.Navigation("Link_Category_Transactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.Navigation("Link_Category_RecurringTransactions");

                    b.Navigation("PreviousTransactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Transaction", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Link_Category_Transactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionGroup", b =>
                {
                    b.Navigation("RecurringTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
