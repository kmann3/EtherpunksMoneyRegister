// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPFMannsMoneyRegister.Data;

#nullable disable

namespace WPFMannsMoneyRegister.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240127035001_000-init")]
    partial class _000init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastBalancedUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OutstandingBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("OutstandingItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("StartingBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            AccountNumber = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(69),
                            CurrentBalance = 2371.79m,
                            InterestRate = 0m,
                            LastBalancedUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(75),
                            LoginUrl = "",
                            Name = "Neches FCU",
                            Notes = "",
                            OutstandingBalance = -30.91m,
                            OutstandingItemCount = 2,
                            StartingBalance = 2111.84m
                        },
                        new
                        {
                            Id = new Guid("b7ad9496-442a-48a9-85a5-c90abf5d4f6c"),
                            AccountNumber = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(77),
                            CurrentBalance = -973.31m,
                            InterestRate = 0m,
                            LastBalancedUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(78),
                            LoginUrl = "",
                            Name = "Capital One",
                            Notes = "",
                            OutstandingBalance = -110.91m,
                            OutstandingItemCount = 3,
                            StartingBalance = -862.4m
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.AccountTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfirmationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RecurringTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TransactionClearedUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TransactionPendingUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecurringTransactionId");

                    b.ToTable("AccountTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("499a1f06-0f73-492c-942e-d7578bc5a725"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -83.36m,
                            Balance = 2028.48m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Loan",
                            Notes = "",
                            RecurringTransactionId = new Guid("81f598fe-bc6c-4380-862c-382b0c90621e"),
                            TransactionClearedUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("ed5c7d50-9870-4fcb-a90c-172a3397fbb9"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -104.00m,
                            Balance = 1924.48m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 1, 0, DateTimeKind.Unspecified),
                            Name = "Verizon",
                            Notes = "",
                            RecurringTransactionId = new Guid("dba4b32c-a3bb-4aad-ba8f-7486ef7ec68c"),
                            TransactionClearedUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("a8036b9b-e15d-4dd9-bd7e-03b5af0802b2"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -838.07m,
                            Balance = 1086.41m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 2, 0, DateTimeKind.Unspecified),
                            Name = "Capital One",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("9d6d1436-57ac-4735-8fca-c24589cf17a8"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -80.72m,
                            Balance = 1005.69m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 3, 0, DateTimeKind.Unspecified),
                            Name = "AT&T",
                            Notes = "",
                            RecurringTransactionId = new Guid("b7b221cb-fe89-4fc3-95a0-4c86ecd1c668"),
                            TransactionClearedUTC = new DateTime(2023, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("b95c5478-1895-4c36-98ae-db4821b3b09b"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -150.00m,
                            Balance = 855.69m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 4, 0, DateTimeKind.Unspecified),
                            Name = "WF: Windows",
                            Notes = "",
                            RecurringTransactionId = new Guid("df7362e1-a243-4de8-a011-10201db85543"),
                            TransactionClearedUTC = new DateTime(2023, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("7a8bf93b-3d76-4a15-9b98-75063bd64ddd"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -472.12m,
                            Balance = 383.57m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 5, 0, DateTimeKind.Unspecified),
                            Name = "Health Insurance",
                            Notes = "",
                            RecurringTransactionId = new Guid("c1448d42-2185-4f6c-af78-53ded9ecdab0"),
                            TransactionClearedUTC = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("b3b70192-3484-4931-8b1e-eeaabd6dc648"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = 378.27m,
                            Balance = 761.84m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 6, 0, DateTimeKind.Unspecified),
                            Name = "OPM",
                            Notes = "",
                            RecurringTransactionId = new Guid("9c38b71b-f99d-4ad1-993e-de2ad8c3ac85"),
                            TransactionClearedUTC = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("2603d6d5-548c-462b-a3de-371f2d502005"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -100m,
                            Balance = 661.84m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 7, 0, DateTimeKind.Unspecified),
                            Name = "Alice",
                            Notes = "Help Alice Rent / Venmo",
                            TransactionClearedUTC = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("95c3fb7d-9f6c-4289-b9e9-120cf597b217"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -12.79m,
                            Balance = 649.05m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 8, 0, DateTimeKind.Unspecified),
                            Name = "Etherpunk",
                            Notes = "",
                            RecurringTransactionId = new Guid("90c5999e-8651-45a3-81d1-8a1f00120ac6"),
                            TransactionClearedUTC = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("d5e75935-c427-4e37-b52a-0fda33ffeba0"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = 0.06m,
                            Balance = 649.11m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 9, 0, DateTimeKind.Unspecified),
                            Name = "Dividends",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("0bee4645-f293-431b-9e46-7dab7b5529ba"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -500m,
                            Balance = 149.11m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 10, 0, DateTimeKind.Unspecified),
                            Name = "Capital One",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("f49b130f-e256-4b81-82a9-c5a8a0696a31"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -35m,
                            Balance = 114.11m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 11, 0, DateTimeKind.Unspecified),
                            Name = "Capital One",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("8b67b401-fead-4703-9082-1de0b8ce7e4a"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -36.81m,
                            Balance = 77.30m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 12, 0, DateTimeKind.Unspecified),
                            Name = "Fitness Your Way",
                            Notes = "",
                            RecurringTransactionId = new Guid("3e415495-4325-4c7f-8dd1-11ced2caa22d"),
                            TransactionClearedUTC = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("f204b11f-e940-46e7-8e1e-4e6307a24099"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -10.81m,
                            Balance = 66.49m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 13, 0, DateTimeKind.Unspecified),
                            Name = "Adobe Photoshop",
                            Notes = "",
                            RecurringTransactionId = new Guid("b064430a-1899-4508-98a3-e943c2055a4e"),
                            TransactionClearedUTC = new DateTime(2023, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("583095f0-59ba-41d7-83a2-c74a6cd4513b"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = 250m,
                            Balance = 316.49m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 14, 0, DateTimeKind.Unspecified),
                            Name = "Mom / Xmas+Birthday",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("275b96fb-7a01-456a-ab60-5557dfb28c17"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -70m,
                            Balance = 246.49m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 15, 0, DateTimeKind.Unspecified),
                            Name = "Monique / Dexter Grooming",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionPendingUTC = new DateTime(2023, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("95232b4a-b2ae-4d73-87fd-b35fd0a44ac7"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = 175m,
                            Balance = 421.49m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 16, 0, DateTimeKind.Unspecified),
                            Name = "Mom / Cell Phone",
                            Notes = "",
                            TransactionClearedUTC = new DateTime(2023, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("e8a4ef8b-b87b-4717-9aed-be4a61f5dce6"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -16.79m,
                            Balance = 404.70m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 19, 0, 0, 17, 0, DateTimeKind.Unspecified),
                            Name = "Allstate Apartment Insurance",
                            Notes = "",
                            RecurringTransactionId = new Guid("6f6e8fc9-96ea-446b-9b9d-6e53f7540be2"),
                            TransactionClearedUTC = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("efe97f54-3860-4e6c-baf7-8e7e88431948"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -2.99m,
                            Balance = 401.71m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 18, 0, DateTimeKind.Unspecified),
                            Name = "Apple iCloud",
                            Notes = "",
                            RecurringTransactionId = new Guid("42f7823e-bfc3-4ec6-949e-c7a496b70201"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("cf2053bd-a392-4657-8869-461918cc8795"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = -27.92m,
                            Balance = 373.79m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 11, 23, 0, 0, 19, 0, DateTimeKind.Unspecified),
                            Name = "Apple Services",
                            Notes = "",
                            RecurringTransactionId = new Guid("da4a6199-ac5a-499a-ade9-b319b8977894"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("62b73cbc-2a30-40b8-9dfd-ffa9c4b83d47"),
                            AccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            Amount = 1998m,
                            Balance = 2371.79m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 22, 0, 0, 20, 0, DateTimeKind.Unspecified),
                            Name = "SSDI",
                            Notes = "",
                            RecurringTransactionId = new Guid("23cbb976-502c-47ff-bd3e-9d2157ff3c7a"),
                            TransactionClearedUTC = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("bec1d1f1-8284-479d-9a05-de9b29288cc0"),
                            AccountId = new Guid("b7ad9496-442a-48a9-85a5-c90abf5d4f6c"),
                            Amount = -30.29m,
                            Balance = -892.69m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Valve",
                            Notes = "",
                            TransactionPendingUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("560510db-4078-4beb-8922-5d90b1ada9d5"),
                            AccountId = new Guid("b7ad9496-442a-48a9-85a5-c90abf5d4f6c"),
                            Amount = -9.73m,
                            Balance = -902.42m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 23, 0, 0, 1, 0, DateTimeKind.Unspecified),
                            Name = "Whataburger",
                            Notes = "",
                            TransactionPendingUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("a515f501-4885-47c9-8c72-4699b196ea32"),
                            AccountId = new Guid("b7ad9496-442a-48a9-85a5-c90abf5d4f6c"),
                            Amount = -70.89m,
                            Balance = -973.31m,
                            BankTransactionText = "",
                            ConfirmationNumber = "",
                            CreatedOnUTC = new DateTime(2023, 12, 23, 0, 0, 2, 0, DateTimeKind.Unspecified),
                            Name = "SMARTERASP.NET",
                            Notes = "",
                            TransactionPendingUTC = new DateTime(2023, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = "Debit"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(81),
                            Name = "bills"
                        },
                        new
                        {
                            Id = new Guid("a33ef77b-01e9-474e-9ced-520ce3de3801"),
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(83),
                            Name = "fast-food"
                        },
                        new
                        {
                            Id = new Guid("e5a56a00-5d9b-4ae6-bb31-d020c481db32"),
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(84),
                            Name = "gas"
                        },
                        new
                        {
                            Id = new Guid("9cdb0674-247e-48d0-ac38-7247df637f6c"),
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(85),
                            Name = "groceries"
                        },
                        new
                        {
                            Id = new Guid("272b0ce7-c43a-4850-ac59-a7b3b6e78812"),
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(93),
                            Name = "medications"
                        },
                        new
                        {
                            Id = new Guid("98f8b3c8-5a4b-40dc-938e-9c535086e092"),
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(94),
                            Name = "streaming"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_RecurringTransaction", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecurringTransactionId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId", "RecurringTransactionId");

                    b.HasIndex("RecurringTransactionId");

                    b.ToTable("Link_Category_RecurringTransactions");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("b064430a-1899-4508-98a3-e943c2055a4e")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("6f6e8fc9-96ea-446b-9b9d-6e53f7540be2")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("42f7823e-bfc3-4ec6-949e-c7a496b70201")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("da4a6199-ac5a-499a-ade9-b319b8977894")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("b7b221cb-fe89-4fc3-95a0-4c86ecd1c668")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("fc40f479-350a-400b-815e-89dbac39d61f")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("3e415495-4325-4c7f-8dd1-11ced2caa22d")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("90c5999e-8651-45a3-81d1-8a1f00120ac6")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("c1448d42-2185-4f6c-af78-53ded9ecdab0")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("81f598fe-bc6c-4380-862c-382b0c90621e")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("dba4b32c-a3bb-4aad-ba8f-7486ef7ec68c")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("df7362e1-a243-4de8-a011-10201db85543")
                        },
                        new
                        {
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac"),
                            RecurringTransactionId = new Guid("ecc1d6de-949c-4e0c-a455-d01de4d920fa")
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_Transaction", b =>
                {
                    b.Property<Guid>("AccountTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountTransactionId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Link_Categories_Transactions");

                    b.HasData(
                        new
                        {
                            AccountTransactionId = new Guid("499a1f06-0f73-492c-942e-d7578bc5a725"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("ed5c7d50-9870-4fcb-a90c-172a3397fbb9"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("9d6d1436-57ac-4735-8fca-c24589cf17a8"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("b95c5478-1895-4c36-98ae-db4821b3b09b"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("7a8bf93b-3d76-4a15-9b98-75063bd64ddd"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("b3b70192-3484-4931-8b1e-eeaabd6dc648"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("95c3fb7d-9f6c-4289-b9e9-120cf597b217"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("8b67b401-fead-4703-9082-1de0b8ce7e4a"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("f204b11f-e940-46e7-8e1e-4e6307a24099"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("e8a4ef8b-b87b-4717-9aed-be4a61f5dce6"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("efe97f54-3860-4e6c-baf7-8e7e88431948"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        },
                        new
                        {
                            AccountTransactionId = new Guid("cf2053bd-a392-4657-8869-461918cc8795"),
                            CategoryId = new Guid("0cb56767-1a25-4c07-ad99-a0b7a449fcac")
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionRegEx")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankTransactionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FrequencyDateValue")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FrequencyDayOfWeekValue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FrequencyValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("NextDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecurringFrequencyType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TransactionGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TransactionGroupId");

                    b.ToTable("RecurringTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b064430a-1899-4508-98a3-e943c2055a4e"),
                            Amount = -10.81m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "CA 408 536 6000 ADOBE INC.",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(248),
                            FrequencyDateValue = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adobe Photoshop",
                            NextDueDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("6f6e8fc9-96ea-446b-9b9d-6e53f7540be2"),
                            Amount = -16.79m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "ALLSTATE INS CO (INS PREM)",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(309),
                            FrequencyDateValue = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Allstate Apartment Insurance",
                            NextDueDate = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("42f7823e-bfc3-4ec6-949e-c7a496b70201"),
                            Amount = -2.99m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(336),
                            FrequencyDateValue = new DateTime(2023, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple iCloud",
                            NextDueDate = new DateTime(2024, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("da4a6199-ac5a-499a-ade9-b319b8977894"),
                            Amount = -27.92m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(363),
                            FrequencyDateValue = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple Services",
                            NextDueDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("b7b221cb-fe89-4fc3-95a0-4c86ecd1c668"),
                            Amount = -80.72m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "TX 800 331 0500 ATT*BILL",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(388),
                            FrequencyDateValue = new DateTime(2023, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AT&T",
                            NextDueDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("fc40f479-350a-400b-815e-89dbac39d61f"),
                            Amount = -719.52m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "Transfer",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(416),
                            FrequencyDateValue = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Explorer",
                            NextDueDate = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("3e415495-4325-4c7f-8dd1-11ced2caa22d"),
                            Amount = -36.81m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "TN 888 242 2060 FITNESS YOUR",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(443),
                            FrequencyDateValue = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FrequencyValue = 9,
                            Name = "Fitness Your Way",
                            NextDueDate = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("90c5999e-8651-45a3-81d1-8a1f00120ac6"),
                            Amount = -12.79m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "CA CC GOOGLE.COM GOOGLE*GSUITE",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(470),
                            FrequencyDateValue = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Etherpunk",
                            NextDueDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("c1448d42-2185-4f6c-af78-53ded9ecdab0"),
                            Amount = -472.12m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "WEBUSDA NFC DPRS (ONLINE PMT)",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(494),
                            FrequencyDateValue = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Health Insurance",
                            NextDueDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("81f598fe-bc6c-4380-862c-382b0c90621e"),
                            Amount = -83.36m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "Transfer",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(522),
                            FrequencyDateValue = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal Loan",
                            NextDueDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("dba4b32c-a3bb-4aad-ba8f-7486ef7ec68c"),
                            Amount = -104.00m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "WEBVENMO (PAYMENT)",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(547),
                            FrequencyDateValue = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Verizon",
                            NextDueDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Venmo money to Tim",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("df7362e1-a243-4de8-a011-10201db85543"),
                            Amount = -150.00m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "WEBWELLS FARGO CARD (CCPYMT)",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(577),
                            FrequencyDateValue = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WF: Windows",
                            NextDueDate = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("ecc1d6de-949c-4e0c-a455-d01de4d920fa"),
                            Amount = -67.5m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(602),
                            FrequencyDateValue = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WF: A/C",
                            NextDueDate = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionGroupId = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("36cbc06f-90e3-4c56-b1fe-0012efdc4f08"),
                            Amount = -83.4m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(646),
                            FrequencyDateValue = new DateTime(2024, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Smarter ASP.Net: Etherpunk Web Hosting",
                            NextDueDate = new DateTime(2024, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("79735ecd-c2aa-4e4e-ae3d-74feb3dbb9b3"),
                            Amount = -15.88m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(659),
                            FrequencyDateValue = new DateTime(2024, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Namecheap: Etherpunk DNS",
                            NextDueDate = new DateTime(2024, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("fda39822-5714-4620-a17f-66f0f0a97889"),
                            Amount = -150.47m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(672),
                            FrequencyDateValue = new DateTime(2024, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amazon",
                            NextDueDate = new DateTime(2024, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("871b919c-333e-412d-a28e-965f663005dc"),
                            Amount = -70m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(685),
                            Name = "Monique: Dexter Grooming",
                            Notes = "",
                            RecurringFrequencyType = "Unknown",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("72f5977b-4a60-4537-93e3-bd2d4b4a3cd3"),
                            Amount = -108.24m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(701),
                            FrequencyDateValue = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Office 365",
                            NextDueDate = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Yearly",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("ab72016f-20bd-44ae-af0d-8ce47cf73e19"),
                            Amount = -98.51m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(714),
                            Name = "Bill Clark",
                            Notes = "",
                            RecurringFrequencyType = "Irregular",
                            TransactionType = "Debit"
                        },
                        new
                        {
                            Id = new Guid("988c8078-4b59-47fc-8dde-f1cfe603dd68"),
                            Amount = 175m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(736),
                            FrequencyDateValue = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mom-CellPhone",
                            NextDueDate = new DateTime(2024, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("23cbb976-502c-47ff-bd3e-9d2157ff3c7a"),
                            Amount = 1998m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "SSA TREAS 310 (XXSOC SEC)",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(740),
                            FrequencyDayOfWeekValue = 3,
                            FrequencyValue = 4,
                            Name = "SSDI",
                            NextDueDate = new DateTime(2024, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "XWeekOnYDayOfWeek",
                            TransactionType = "Credit"
                        },
                        new
                        {
                            Id = new Guid("9c38b71b-f99d-4ad1-993e-de2ad8c3ac85"),
                            Amount = 378.27m,
                            BankTransactionRegEx = "",
                            BankTransactionText = "OPM1 TREAS 310 (XXCIV SERV)",
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(758),
                            FrequencyDateValue = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OPM",
                            NextDueDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "",
                            RecurringFrequencyType = "Monthly",
                            TransactionType = "Credit"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<Guid>("DefaultAccountId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<int>("SearchDayCount")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultAccountId = new Guid("b356926e-041a-479e-b531-daef60b64a23"),
                            SearchDayCount = 45
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionFile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<Guid>("AccountTransactionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountTransactionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedOnUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TransactionGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f2b12ea-04d2-4abb-9d24-f9e1e1c8c87f"),
                            CreatedOnUTC = new DateTime(2024, 1, 27, 3, 50, 0, 279, DateTimeKind.Utc).AddTicks(221),
                            Name = "All Regular Bills"
                        });
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.AccountTransaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Account", "Account")
                        .WithMany("AccountTransactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", "RecurringTransaction")
                        .WithMany("PreviousAccountTransactions")
                        .HasForeignKey("RecurringTransactionId");

                    b.Navigation("Account");

                    b.Navigation("RecurringTransaction");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_RecurringTransaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Category", null)
                        .WithMany("Link_Category_RecurringTransactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", null)
                        .WithMany("Link_Category_RecurringTransactions")
                        .HasForeignKey("RecurringTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Link_Category_Transaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.AccountTransaction", null)
                        .WithMany("Link_Category_Transactions")
                        .HasForeignKey("AccountTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.Category", null)
                        .WithMany("Link_Category_Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.TransactionGroup", "Group")
                        .WithMany("RecurringTransactions")
                        .HasForeignKey("TransactionGroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionFile", b =>
                {
                    b.HasOne("WPFMannsMoneyRegister.Data.Entities.AccountTransaction", "AccountTransaction")
                        .WithMany("Files")
                        .HasForeignKey("AccountTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountTransaction");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Account", b =>
                {
                    b.Navigation("AccountTransactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.AccountTransaction", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Link_Category_Transactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.Category", b =>
                {
                    b.Navigation("Link_Category_RecurringTransactions");

                    b.Navigation("Link_Category_Transactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.RecurringTransaction", b =>
                {
                    b.Navigation("Link_Category_RecurringTransactions");

                    b.Navigation("PreviousAccountTransactions");
                });

            modelBuilder.Entity("WPFMannsMoneyRegister.Data.Entities.TransactionGroup", b =>
                {
                    b.Navigation("RecurringTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
